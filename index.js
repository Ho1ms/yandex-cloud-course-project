// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
const { Telegraf } = require('telegraf');
const axios = require('axios');

// –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Telegraf –∏ –ø–µ—Ä–µ–¥–∞—ë–º —Ç—É–¥–∞ BOT_TOKEN
const bot = new Telegraf(process.env.BOT_TOKEN);

// –ó–∞–¥–∞—ë–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±–æ—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–¥—ã /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.start((ctx) => {
    ctx.reply(`<b>üëã –ü—Ä–∏–≤–µ—Ç ${ctx.from.username}!</b>\n–Ø –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–æ—Ç, –Ø - —Ç–≤–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫!\n\n<b>üìï –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:</b>\n1) –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É <code>/currency</code>\n2) –î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ - –∫–æ–º–∞–Ω–¥—É <code>/convert {sum} {from} {to}</code>`, { parse_mode: 'HTML' });
});

// –ó–∞–¥–∞—ë–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã /currency, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ API —Å –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç, –ø–æ—Å–ª–µ —á–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å USD, EUR –∏ CNY.
bot.command('currency', async (ctx) => {
    try {
        const response = await axios.get('https://api.exchangerate-api.com/v4/latest/RUB');
        const rates = response.data.rates;
        ctx.reply(`–ö—É—Ä—Å –†—É–±–ª—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.\n <b>USD: ${Math.round(1 / rates.USD, 2)}\n EUR: ${Math.round(1 / rates.EUR, 2)}\n CNY: ${Math.round(1 / rates.CNY, 2)}</b>`, { parse_mode: 'HTML' });
    } catch (error) {
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç :(');
    }
});

// –ó–∞–¥–∞—ë–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã /convert, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–∑–Ω–∞—Ç—å —Å—É–º–º—É –≤ –∑–∞–¥–∞–Ω–æ–π –≤–∞–ª—é—Ç–µ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ –µ—ë –≤ –∂–µ–ª–∞–µ–º—É—é.
bot.command('convert', async (ctx) => {
    const commandText = ctx.message.text.replace('/convert', '').trim();
    const [sum, from, to] = commandText.split(' ');

    try {
        const response = await axios.get(`https://api.exchangerate-api.com/v4/latest/${from}`);
        const rates = response.data.rates;
        const convertedSum = sum * rates[to];
        ctx.reply(`–ü—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ <b>${sum} ${from}</b> –≤ <b>${to}</b> –≤—ã –ø–æ–ª—É—á–∏—Ç–µ: <b>${convertedSum} ${to}</b>`, { parse_mode: 'HTML' });
    } catch (error) {
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã');
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
module.exports.handler = async function (event, context) {
    const message = JSON.parse(event['messages'][0]['details']['message']['body']);
    await bot.handleUpdate(message);
    return {
        statusCode: 500,
        body: event.string,
    };
};
